version: '3.8'

services:
  # خدمة الرسائل الرئيسية
  messaging-service:
    build: .
    container_name: naebak-messaging-service
    ports:
      - "8001:8000"
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://naebak_user:naebak_pass@postgres:5432/naebak_messaging
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    volumes:
      - ./media:/app/media
      - ./logs:/app/logs
    networks:
      - naebak-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "manage.py", "check", "--deploy"]
      interval: 30s
      timeout: 10s
      retries: 3

  # قاعدة البيانات PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: naebak-messaging-postgres
    environment:
      - POSTGRES_DB=naebak_messaging
      - POSTGRES_USER=naebak_user
      - POSTGRES_PASSWORD=naebak_pass
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - "5433:5432"
    networks:
      - naebak-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U naebak_user -d naebak_messaging"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis للتخزين المؤقت والمهام
  redis:
    image: redis:7-alpine
    container_name: naebak-messaging-redis
    command: redis-server --appendonly yes --requirepass naebak_redis_pass
    volumes:
      - redis_data:/data
    ports:
      - "6380:6379"
    networks:
      - naebak-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Celery Worker للمهام غير المتزامنة
  celery-worker:
    build: .
    container_name: naebak-messaging-celery-worker
    command: celery -A messaging_service worker -l info --concurrency=2
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://naebak_user:naebak_pass@postgres:5432/naebak_messaging
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - naebak-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "celery", "-A", "messaging_service", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery Beat للمهام المجدولة
  celery-beat:
    build: .
    container_name: naebak-messaging-celery-beat
    command: celery -A messaging_service beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    environment:
      - DEBUG=False
      - DATABASE_URL=postgresql://naebak_user:naebak_pass@postgres:5432/naebak_messaging
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - postgres
      - redis
    volumes:
      - ./logs:/app/logs
    networks:
      - naebak-network
    restart: unless-stopped

  # Nginx كخادم ويب عكسي
  nginx:
    image: nginx:alpine
    container_name: naebak-messaging-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./media:/app/media:ro
      - ./static:/app/static:ro
    depends_on:
      - messaging-service
    networks:
      - naebak-network
    restart: unless-stopped

  # Flower لمراقبة Celery
  flower:
    build: .
    container_name: naebak-messaging-flower
    command: celery -A messaging_service flower --port=5555
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    ports:
      - "5555:5555"
    depends_on:
      - redis
    networks:
      - naebak-network
    restart: unless-stopped

volumes:
  postgres_data:
    name: naebak-messaging-postgres-data
  redis_data:
    name: naebak-messaging-redis-data

networks:
  naebak-network:
    name: naebak-messaging-network
    driver: bridge
